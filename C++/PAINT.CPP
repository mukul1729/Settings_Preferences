#include <stdio.h>
#include<dos.h>
#include<math.h>
#include<stdlib.h>
#include<graphics.h>
#include <conio.h>
#include <dos.h>
#include<process.h>
#include<iostream.h>
union REGS a;
clock(int pk,int kp)
{
struct time t;
gettime(&t);
if(int(t.ti_hour)>1&&int(t.ti_hour<=9))
{
gotoxy(pk,kp);
printf("0%d:",t.ti_hour);
}
else if(int(t.ti_hour)>=10&&int(t.ti_hour)<=24)
{
gotoxy(pk,kp);
printf("%d:",t.ti_hour);
}


if(t.ti_min>=0&&t.ti_min<=9)
{
gotoxy(pk+3,kp);
printf("0%d:",t.ti_min);
}
else if(t.ti_min>=10&&t.ti_min<=60)
{
gotoxy(pk+3,kp);
printf("%d:",t.ti_min);
}


if(t.ti_sec>=1&&t.ti_sec<=9)
{
gotoxy(pk+6,kp);
printf("0%d",t.ti_sec);
}
else if(t.ti_sec>=10&&t.ti_sec<=60)
{
gotoxy(pk+6,kp);
printf("%d",t.ti_sec);
}
}
lines(int j,int l)
{
line(j-10,l-500,j-10,l+500);
}
color(int m)
{
setfillstyle(1,m);
bar(579,15,613,58);
}
showcor(int a,int b)
{
if(a<10)
{
gotoxy(12,5);
cout<<"X:00"<<a;
}
else if(a<100&&a>=10)
{
gotoxy(12,5);
cout<<"X:0"<<a;
}
else if(a>=100)
{
gotoxy(12,5);
cout<<"X:"<<a;
}

if(b<10)
{
gotoxy(19,5);
cout<<"Y:00"<<b;
}
else if(b<100&&b>=10)
{
gotoxy(19,5);
cout<<"Y:0"<<b;
}
else if(b>=100)
{
gotoxy(19,5);
cout<<"Y:"<<b;
}



}
max(int x,int y)
{
if((x>=80&&x<=130)&&(y>=10&&y<=60))
return('e');
if((x>=150&&x<=200)&&(y>=10&&y<=29))
return('r');
if((x>=150&&x<=200)&&(y>=37&&y<=60))
return('b');
if((x>=220&&x<=270)&&(y>=10&&y<=60))
return('n');
if((x>=290&&x<=340)&&(y>=10&&y<=60))
return('f');
if((x>=360&&x<=410)&&(y>=10&&y<=60))
return('m');
if((x>=430&&x<=480)&&(y>=10&&y<=60))
return('p');
if((x>=500&&x<=550)&&(y>=10&&y<=31))
return('j');
if((x>=500&&x<=550)&&(y>=37&&y<=60))
return('a');
}
interface()
{
gotoxy(3,5);
cout<<"STATUS-";
setlinestyle(0,0,1);
setfillstyle(1,8);
bar(10,10,60,60);
setfillstyle(1,8);
bar(80,10,130,60);
bar(150,10,200,29);
bar(150,37,200,60);
bar(220,10,270,60);
bar(290,10,340,60);
bar(360,10,410,60);
bar(430,10,480,60);
bar(500,10,550,31);
bar(500,37,550,60);

setfillstyle(1,WHITE);
bar(11,80,getmaxx()-10,getmaxy()-10);

setcolor(7);
rectangle(5,3,getmaxx()-3,getmaxy()-3);

setlinestyle(0,1,2);
setcolor(BROWN);
rectangle(10,80,getmaxx()-10,getmaxy()-10);


setcolor(WHITE);
settextstyle(2,0,5);
outtextxy(15,27,"CLEAR");
outtextxy(90,27,"EXIT");
outtextxy(158,13,"RECT.");
outtextxy(158,39,"BAR");
outtextxy(223,27,"ERASER");
outtextxy(297,27,"FREE");
outtextxy(297,37,"HAND");
outtextxy(367,27,"LINE");
outtextxy(433,27,"CIRCLE");
outtextxy(504,13,"FILELI");
outtextxy(505,40,"ELLIP.");
setcolor(7);
setlinestyle(0,0,3);
rectangle(10,10,60,60);
rectangle(80,10,130,60);
rectangle(150,10,200,29);
rectangle(150,37,200,60);
rectangle(220,10,270,60);
rectangle(290,10,340,60);
rectangle(360,10,410,60);
rectangle(430,10,480,60);
rectangle(500,10,550,31);
rectangle(500,37,550,60);

rectangle(577,13,615,60);
}
getkey()
{
a.h.ah=0;
int86(22,&a,&a);
return(a.h.ah);
}
hide()
{
a.x.ax=0x02;
int86(0x33,&a,&a);
}
show()
{
a.x.ax=0x01;
int86(0x33,&a,&a);
}
get(int *b,int *x,int *y)
{
a.x.ax=0x03;
int86(0x33,&a,&a);
*x=a.x.cx;
*y=a.x.dx;
*b=a.x.bx;
}
void main()
{
randomize();
unsigned int u;
int ccc=0,uuu=0,mmm=0,kkk=10,c,i=2,b1,d,p=0;
char key,g1,ch,y4,uu,ghj[30];
int ppp=1,j=0,t1,t2,gd=DETECT,gm;
float l,k;
int nnnnn=0;
struct date kkr;
getdate(&kkr);
initgraph(&gd,&gm,"c:\\turboc3\\bgi");
int b,x,y,n;
cleardevice();

int xx=getmaxx()/2,yy=getmaxy()/2;
getch();
cleardevice();
setbkcolor(8);
{
setcolor(15);
settextstyle(2,0,4);
outtextxy(xx-50,yy-12,"ORICATE");
}
{
setcolor(7);
rectangle(xx-52,yy,xx+50,yy+10);
}
while(1)
{
++n;
if(n<80)
{
delay(random(100));
setfillstyle(1,7);
bar(xx-50,yy+2.4,xx-48+n,yy+8.4);
}
else if(n>=80&&n<=100)
{
delay(random(100));
setfillstyle(1,15);
bar(xx-50,yy+2.4,xx-48+n,yy+8.4);
setfillstyle(1,7);
bar(xx-50,yy+2.4,xx-48+80,yy+8.4);
}
if((xx-48+n)==xx+48)
break;
}
delay(100);
setbkcolor(BLACK);
interface();
setfillstyle(1,BLACK);
bar(550,62,620,78);
gotoxy(70,5);
cout<<"NOTHING";
while(1)
{
nosound();
gotoxy(27,5);
cout<<"CLOCK|";
clock(33,5);
gotoxy(44,5);
cout<<"DATE:";
gotoxy(49,5);
printf("%d",kkr.da_day);
gotoxy(51,5);
printf("/%d",kkr.da_mon);
gotoxy(53,5);
printf("/%d",kkr.da_year);
gotoxy(60,5);
cout<<"SELCETED:";
if(kbhit())
{
key=getkey();
if(key==78)
{
++kkk;
}
if(key==74)
{
--kkk;
}
}
show();
get(&b,&x,&y);
showcor(x,y);
if(b==2)
{
++ppp;
}
setviewport(0,0,getmaxx(),getmaxy(),1);
color(ppp);
if(b==1)
{
if((x>=1&&x<=620)&&(y>=0&&y<=60))
{
sound(4900);
delay(50);
nosound();
sound(2000);
delay(50);
nosound();
setlinestyle(0,0,7);
g1=max(x,y);
hide();
delay(100);
}
t1=x;
t2=y;
if(x>=10&&x<=60&&y>=10&&y<=60)
{
setlinestyle(0,0,7);
hide();
delay(70);
cleardevice();
setfillstyle(1,BLACK);
bar(550,62,620,78);
gotoxy(70,5);
cout<<"NOTHING";
interface();
show();
}
if(g1=='b')
{
setfillstyle(1,BLACK);
bar(550,62,625,78);
gotoxy(70,5);
cout<<"BAR";
hide();
while(b==1)
{
setviewport(12,83,getmaxx()-12,getmaxy()-12,1);
get(&b,&x,&y);
setfillstyle(1,ppp);
bar(t1-10,t2-83,x-10,y-69);
}
setlinestyle(0,0,7);
}
int o=0;
if(g1=='a')
{
setfillstyle(1,BLACK);
bar(550,62,625,78);
gotoxy(70,5);
cout<<"ELLIPSE";
while(b==1)
{
setviewport(12,83,getmaxx()-12,getmaxy()-12,1);
get(&b,&x,&y);
}
setlinestyle(0,0,1);
setcolor(ppp);
ellipse(t1-12,t2-83,0,360,abs(x-t1),abs(y-t2));
}
if(g1=='j')
{
hide();
setfillstyle(1,BLACK);
bar(550,62,625,78);
gotoxy(70,5);
cout<<"FILELIP";
while(b==1)
{
setviewport(12,83,getmaxx()-12,getmaxy()-12,1);
get(&b,&x,&y);
setcolor(ppp);
setfillstyle(1,ppp);
fillellipse(t1-12,t2-83,abs(x-t1),abs(y-t2));
ellipse(t1-12,t2-83,0,360,abs(x-t1),abs(y-t2));
}
show();
}
if(g1=='p')
{
hide();
setfillstyle(1,BLACK);
bar(550,62,625,78);
gotoxy(70,5);
cout<<"CIRCLE";
uuu=1;
while(b==1)
{
++uuu;
delay(20);
setviewport(12,83,getmaxx()-12,getmaxy()-12,1);
get(&b,&x,&y);
setlinestyle(0,0,3);
setcolor(ppp);
circle(x-12,y-83,uuu);
}
nosound();
}
if(g1=='r')
{
setfillstyle(1,BLACK);
bar(550,62,625,78);
gotoxy(70,5);
cout<<"RECTANGLE";
while(b==1)
{
setviewport(12,83,getmaxx()-12,getmaxy()-12,1);
get(&b,&x,&y);
}
setlinestyle(0,0,1);
setcolor(ppp);
rectangle(t1-12,t2-83,x-12,y-83);
}
if(g1=='m')
{
setfillstyle(1,BLACK);
bar(550,62,625,78);
gotoxy(70,5);
cout<<"LINE";
setviewport(12,83,getmaxx()-12,getmaxy()-12,1);
while(b==1)
{
get(&b,&x,&y);
}
setlinestyle(0,0,1);
setcolor(ppp);
line(t1-12,t2-83,x-12,y-83);
show();
}
if(g1=='n')
{
hide();
setfillstyle(1,BLACK);
bar(550,62,625,78);
gotoxy(70,5);
cout<<"ERASER";
setviewport(12,83,getmaxx()-12,getmaxy()-12,1);
while(b==1)
{
get(&b,&x,&y);
setfillstyle(1,WHITE);
bar(t1-12,t2-83,(x-12)+abs(kkk),(y-83)+abs(kkk));
t1=x;
t2=y;
}
}
show();
}
if(g1=='e')
{
hide();
setfillstyle(1,BLACK);
bar(550,62,625,78);
gotoxy(70,5);
cout<<"EMPTY";
cleardevice();
setbkcolor(8);
setlinestyle(0,0,1);
for(i=1;i<=200;i++)
{
setlinestyle(0,0,1);
delay(10);
cleardevice();
k=7*cos(i);
l=7*sin(i);
line(getmaxx()/2,getmaxy()/2,getmaxx()/2+k,getmaxy()/2+l);
for(int y=0;y<=1;y++)
{
setcolor(RED);
circle(k+getmaxx()/2,l+getmaxy()/2,y);
}
}
exit(0);
}
if(g1=='f')
{
hide();
setfillstyle(1,BLACK);
bar(550,62,625,78);
gotoxy(70,5);
cout<<"FREEHAND";
while(b==1)
{
setviewport(12,83,getmaxx()-12,getmaxy()-12,1);
setlinestyle(0,0,1);
setcolor(ppp);
get(&b,&x,&y);
line(t1-12,t2-83,x-12,y-83);
t1=x;
t2=y;
}
show();
}
}
getch();
}
